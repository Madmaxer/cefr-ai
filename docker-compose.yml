services:
    php:
        container_name: app-ai
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - .:/var/www/html
        depends_on:
            - mysql
            - redis
            - rabbitmq

    nginx:
        container_name: nginx-ai
        image: nginx:alpine
        restart: unless-stopped
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./:/var/www
            - ./nginx:/etc/nginx/conf.d
            - ./nginx/snippets:/etc/nginx/snippets
            - ./certs:/etc/nginx/certs

    mysql:
        container_name: mysql-ai
        image: mysql:8.0
        environment:
            MYSQL_ROOT_PASSWORD: root
            MYSQL_DATABASE: laravel
            MYSQL_USER: laravel
            MYSQL_PASSWORD: secret
        volumes:
            - mysql-data:/var/lib/mysql

    redis:
        container_name: redis-ai
        image: redis:7.2
        ports:
            - "6379:6379"
        volumes:
            - redis-data:/data

    rabbitmq:
        container_name: rabbitmq-ai
        image: rabbitmq:3-management
        ports:
            - "5672:5672"
            - "15672:15672"
        volumes:
            - rabbitmq-data:/var/lib/rabbitmq

    horizon:
        container_name: horizon-ai
        build:
            context: .
            dockerfile: Dockerfile
        volumes:
            - .:/var/www/html
        command: php artisan horizon
        depends_on:
            - php
            - redis
            - rabbitmq

    node:
        container_name: node-ai
        image: node:20
        working_dir: /var/www/html
        volumes:
            - .:/var/www/html
        command: sh -c "npm ci && npm run clean && npm run build"
        depends_on:
            - php

volumes:
    mysql-data:
    redis-data:
    rabbitmq-data:
